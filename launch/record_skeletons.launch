<launch>
  <!-- Launch kinect sensor with openni_camera... -->

  <arg name="debug" default="false"/>
  <arg if="$(arg debug)" name="launch_prefix" value="xterm -rv -e gdb -ex run -args"/>
  <arg unless="$(arg debug)" name="launch_prefix" value="xterm -rv -e"/>
  <node pkg="openni_camera" type="openni_node" name="openni_node1" output="screen" launch-prefix="$(arg launch_prefix)">
	<!--param name="topic" value="first" /-->
    	<!--param name="device_id" value="2@3" --> <!-- this line uses device on usb bus 2 and addres 3 -->
	<!--param name="device_id" value="B00367707227042B"/--> <!-- this line uses device with given serial number -->
 	<param name="device_id" value="#1"/> <!-- this line uses first enumerated device -->
	<rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
	<param name="rgb_frame_id" value="/openni_rgb_optical_frame" />
	<param name="depth_frame_id" value="/openni_depth_optical_frame" />
	<param name="use_indices" value="false" />
	<param name="depth_registration" value="true" />
	<param name="image_mode" value="2" />
	<param name="depth_mode" value="2" />
	<param name="debayering" value="2" />
	<param name="depth_time_offset" value="0" />
	<param name="image_time_offset" value="0" />
  </node>
  <include file="$(find openni_camera)/launch/kinect_frames.launch"/>

  <!-- Launch skeleton tracking node with output in a new window -->
  <node pkg="skeletontracker_nu" type="skeletontracker" name="skeletontracker"  output="screen" respawn="true" launch-prefix="xterm -rv -e"/>
	
  <!-- Launch rviz with a nice configuration -->
  <node pkg="rviz" type="rviz" name="rviz" respawn="false" args="-d $(find skeletontracker_nu)/launch/skeletonrecord.vcg"/>

  <!-- Include the launch file for the static transform broadcaster that aligns my kinect with gravity -->
  <include file="$(find objecttracker_nu)/launch/optimization_frame_broadcaster.launch"/>
  <node pkg="tf" type="static_transform_publisher" name="world_frame_broadcaster"
	args="0 -1 0 -.7071 0 0 .7071 oriented_optimization_frame trep_world_frame 10"/>
	
</launch>
